import CodeBlock from "@/components/ui/code-block";

const Lecture18Es = () => (
	<div className='space-y-8'>
		<section>
			<h3 className='text-2xl font-semibold mb-3'>
				1. Un Mundo, M칰ltiples Pantallas
			</h3>
			<p className='mb-4'>
				Hoy en d칤a, los usuarios acceden a la web desde una incre칤ble variedad
				de dispositivos: tel칠fonos, tabletas, port치tiles, televisores. El{" "}
				<strong>Dise침o Web Responsivo (Responsive Web Design)</strong> es el
				enfoque que sugiere que el dise침o y el desarrollo deben responder al
				comportamiento y entorno del usuario en funci칩n del tama침o de la
				pantalla, la plataforma y la orientaci칩n.
			</p>
			<p>
				Una web responsiva se adapta fluidamente para ofrecer la mejor
				experiencia posible en cualquier dispositivo.
			</p>
		</section>

		<section>
			<h3 className='text-2xl font-semibold mb-3'>
				2. Los Tres Ingredientes del Dise침o Responsivo
			</h3>
			<p className='mb-4'>
				El dise침o responsivo se basa en tres pilares t칠cnicos:
			</p>
			<ol className='list-decimal list-inside space-y-4 pl-4 mb-4'>
				<li>
					<strong>Layouts Fluidos:</strong> En lugar de usar anchos fijos en
					p칤xeles (<code>width: 960px;</code>), usamos unidades relativas como
					porcentajes (<code>width: 80%;</code>). Esto permite que el layout se
					estire o encoja con el tama침o de la pantalla.
				</li>
				<li>
					<strong>Im치genes Flexibles:</strong> Para evitar que las im치genes se
					desborden de sus contenedores en pantallas peque침as, usamos una regla
					de oro:
					<CodeBlock
						language='css'
						codeString={`img {
  max-width: 100%;
  height: auto;
}`}
					/>
					<p className='mt-2'>
						Esto asegura que una imagen nunca ser치 m치s ancha que su contenedor,
						pero puede encogerse si es necesario, manteniendo su proporci칩n.
					</p>
				</li>
				<li>
					<strong>Media Queries:</strong> La herramienta m치s poderosa. Nos
					permiten aplicar bloques de CSS solo cuando se cumplen ciertas
					condiciones, generalmente relacionadas con el tama침o de la pantalla.
				</li>
			</ol>
		</section>

		<section>
			<h3 className='text-2xl font-semibold mb-3'>
				3. Media Queries: CSS con Superpoderes
			</h3>
			<p className='mb-4'>
				Una media query es una "pregunta" que le hacemos al navegador sobre el
				dispositivo en el que se est치 mostrando la p치gina. Si la respuesta es
				"s칤", se aplican los estilos dentro de la query.
			</p>
			{/* FIX: Escaped curly braces to prevent JSX parsing error. */}
			<p className='mb-4'>
				La sintaxis b치sica es{" "}
				<code>
					@media (condici칩n) {"{"} /* reglas CSS aqu칤 */ {"}"}
				</code>
				.
			</p>

			<h4 className='text-xl font-semibold mt-6 mb-2'>
				`max-width` vs `min-width`
			</h4>
			<ul className='list-disc list-inside space-y-4 pl-4 mb-4'>
				<li>
					<strong>`max-width` (Desktop-First):</strong> Los estilos se aplican
					si el ancho de la ventana es <strong>menor o igual</strong> al valor
					especificado. Es como decir "para pantallas peque침as".
					<CodeBlock
						language='css'
						codeString={`/* Estilos base para escritorio */
.contenedor {
  width: 900px;
}

/* Si la pantalla es de 600px o menos, aplica esto */
@media (max-width: 600px) {
  .contenedor {
    width: 100%;
  }
}`}
					/>
				</li>
				<li>
					<strong>`min-width` (Mobile-First):</strong> Los estilos se aplican si
					el ancho de la ventana es <strong>mayor o igual</strong> al valor
					especificado. Es como decir "a partir de este tama침o de pantalla".
					<CodeBlock
						language='css'
						codeString={`/* Estilos base para m칩vil */
.contenedor {
  width: 100%;
}

/* Si la pantalla es de 768px o m치s, aplica esto */
@media (min-width: 768px) {
  .contenedor {
    width: 750px;
  }
}`}
					/>
				</li>
			</ul>
			<div className='p-4 bg-blue-50 dark:bg-gray-800 border-l-4 border-blue-500 rounded-r-lg my-4'>
				<p className='font-semibold text-blue-800 dark:text-blue-300'>
					Mobile-First es el Est치ndar Moderno
				</p>
				<p className='text-blue-700 dark:text-gray-300'>
					Dise침ar primero para pantallas peque침as (m칩viles) y luego a침adir
					complejidad para pantallas m치s grandes (usando `min-width`) es la
					pr치ctica recomendada. Obliga a priorizar el contenido y suele resultar
					en un CSS m치s limpio y un mejor rendimiento en dispositivos m칩viles.
				</p>
			</div>
		</section>

		<section>
			<h3 className='text-2xl font-semibold mb-3'>
				游닇 Tarea: Haz Responsiva tu Galer칤a
			</h3>
			<p className='mb-4'>
				Vamos a tomar un layout simple de tarjetas y hacerlo responsivo usando
				el enfoque Mobile-First.
			</p>
			<ol className='list-decimal list-inside space-y-2 pl-4 mb-4'>
				<li>
					<strong>HTML:</strong> Crea un `div` contenedor que envuelva varias
					tarjetas (puedes usar las de la lecci칩n anterior).
				</li>
				<li>
					<strong>CSS (Mobile-First):</strong>
					<ul className='list-disc list-inside space-y-1 pl-6 my-2'>
						<li>
							Estiliza tus tarjetas para que por defecto se muestren una debajo
							de la otra, ocupando la mayor parte del ancho disponible. Este
							ser치 tu dise침o para pantallas peque침as.
						</li>
					</ul>
				</li>
				<li>
					<strong>CSS (Media Query):</strong>
					<ul className='list-disc list-inside space-y-1 pl-6 my-2'>
						<li>
							Elige un "breakpoint" (un punto de ruptura), por ejemplo,{" "}
							<code>768px</code>.
						</li>
						{/* FIX: Escaped curly braces to prevent JSX parsing error. */}
						<li>
							Crea una media query:{" "}
							<code>@media (min-width: 768px) {"{ ... }"}</code>.
						</li>
						<li>
							Dentro de esta media query, cambia los estilos del contenedor de
							las tarjetas para que se muestren en una cuadr칤cula. Por ejemplo,
							puedes usar{" "}
							<code>display: grid; grid-template-columns: 1fr 1fr;</code> para
							crear una cuadr칤cula de dos columnas.
						</li>
						<li>
							(Opcional) A침ade otro breakpoint para pantallas m치s grandes (ej.{" "}
							<code>1024px</code>) y cambia la cuadr칤cula a tres columnas
							(`grid-template-columns: 1fr 1fr 1fr;`).
						</li>
					</ul>
				</li>
				<li>
					Abre tu p치gina en el navegador y redimensiona la ventana. Deber칤as ver
					c칩mo el layout cambia de una columna a dos (y luego a tres) a medida
					que la pantalla se hace m치s ancha.
				</li>
			</ol>
		</section>
	</div>
);

export default Lecture18Es;
