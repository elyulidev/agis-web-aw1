import CodeBlock from "@/components/ui/code-block";

const Lecture19Pt = () => (
	<div className='space-y-8'>
		<section>
			<h3 className='text-2xl font-semibold mb-3'>
				1. Do Est√°tico ao Din√¢mico: Apresentando o JavaScript
			</h3>
			<p className='mb-4'>
				Parab√©ns por chegar ao M√≥dulo 5! At√© agora, aprendemos a construir a
				estrutura e o esqueleto de uma p√°gina web com HTML e, em m√≥dulos
				futuros, aprenderemos a estiliz√°-la com CSS. Criamos p√°ginas est√°ticas,
				que s√£o como folhetos digitais: mostram informa√ß√£o, mas n√£o reagem √†s
				a√ß√µes do utilizador.
			</p>
			<p className='mb-4'>
				Hoje, damos o salto para o mundo din√¢mico com o{" "}
				<strong>JavaScript (JS)</strong>. Se o HTML √© o esqueleto e o CSS √© a
				pele, o JavaScript √© o sistema nervoso e os m√∫sculos. √â a linguagem de
				programa√ß√£o que nos permite adicionar interatividade, l√≥gica e dinamismo
				aos nossos websites.
			</p>
		</section>

		<section>
			<h3 className='text-2xl font-semibold mb-3'>2. O que √© o JavaScript?</h3>
			<p className='mb-4'>
				JavaScript √© uma linguagem de programa√ß√£o de alto n√≠vel, interpretada e
				orientada a objetos que √© executada diretamente no navegador do
				utilizador (o que √© conhecido como "lado do cliente" ou "client-side").
				Isto significa que n√£o precisamos de compilar o nosso c√≥digo antes que
				ele seja executado.
			</p>
			<p className='mb-4'>O que podemos fazer com ele?</p>
			<ul className='list-disc list-inside space-y-2 pl-4 mb-4'>
				<li>Validar formul√°rios antes de os enviar.</li>
				<li>Criar anima√ß√µes e efeitos visuais.</li>
				<li>
					Carregar novo conte√∫do na p√°gina sem ter de a recarregar (AJAX).
				</li>
				<li>Construir jogos, calculadoras e aplica√ß√µes web complexas.</li>
				<li>Manipular o HTML e o CSS da p√°gina em tempo real.</li>
			</ul>
		</section>

		<section>
			<h3 className='text-2xl font-semibold mb-3'>
				3. O Nosso Ambiente de Desenvolvimento: A Consola do Navegador
			</h3>
			<p className='mb-4'>
				A boa not√≠cia √© que n√£o precisa de instalar nada de novo para come√ßar
				com o JavaScript. O seu pr√≥prio navegador web (Chrome, Firefox, etc.)
				tem um poderoso conjunto de ferramentas para programadores, e a mais
				importante para n√≥s agora √© a <strong>Consola</strong>.
			</p>
			<ol className='list-decimal list-inside space-y-2 pl-4 mb-4'>
				<li>Abra o seu navegador.</li>
				<li>
					Clique com o bot√£o direito em qualquer parte da p√°gina e selecione
					"Inspecionar" (ou "Inspect").
				</li>
				<li>
					No painel que se abre, procure e clique no separador "Consola" (ou
					"Console").
				</li>
			</ol>
			<p className='mb-4'>
				A consola √© um ambiente interativo onde pode escrever e executar c√≥digo
				JavaScript diretamente. Experimente! Escreva o seguinte e pressione
				Enter:
			</p>
			<CodeBlock
				language='javascript'
				codeString={`console.log("Ol√°, Mundo a partir da Consola!");

2 + 2; // A consola ir√° mostrar o resultado: 4`}
			/>
		</section>

		<section>
			<h3 className='text-2xl font-semibold mb-3'>
				4. Como Ligar o JavaScript ao seu HTML
			</h3>
			<p className='mb-4'>
				Existem duas formas de incluir JavaScript num ficheiro HTML, mas uma √©
				muito melhor que a outra.
			</p>

			<h4 className='text-xl font-semibold mt-6 mb-2'>
				M√©todo 1: Script Interno (Menos Recomendado)
			</h4>
			<p className='mb-4'>
				Pode escrever o seu c√≥digo JS diretamente dentro de uma tag{" "}
				<code>&lt;script&gt;</code> no seu HTML.
			</p>
			<CodeBlock
				language='html'
				codeString={`<body>
  <h1>A Minha P√°gina</h1>

  <script>
    console.log("Este c√≥digo est√° dentro do HTML.");
  </script>
</body>`}
			/>

			<h4 className='text-xl font-semibold mt-6 mb-2'>
				M√©todo 2: Script Externo (Pr√°tica Recomendada)
			</h4>
			<p className='mb-4'>
				Esta √© a forma profissional e organizada. Criamos um ficheiro separado
				com a extens√£o <code>.js</code> (por exemplo, <code>script.js</code>) e
				ligamo-lo a partir do nosso HTML.
			</p>
			<div className='p-4 bg-blue-50 dark:bg-gray-800 border-l-4 border-blue-500 rounded-r-lg my-4'>
				<p className='font-semibold text-blue-800 dark:text-blue-300'>
					Porque √© melhor um ficheiro externo?
				</p>
				<p className='text-blue-700 dark:text-gray-300'>
					Mant√©m a separa√ß√£o de responsabilidades (HTML para estrutura, JS para
					comportamento), torna o c√≥digo mais reutiliz√°vel e permite que o
					navegador armazene o ficheiro em cache, melhorando a velocidade de
					carregamento.
				</p>
			</div>

			<p className='mb-4'>
				Primeiro, crie um ficheiro <code>script.js</code> na mesma pasta que o
				seu <code>index.html</code>:
			</p>
			<CodeBlock
				language='javascript'
				codeString={`// Dentro de script.js
console.log("Ol√° a partir de um ficheiro externo!");`}
			/>

			<p className='mt-4'>
				Depois, ligue esse ficheiro no seu HTML usando a tag{" "}
				<code>&lt;script&gt;</code> com o atributo <code>src</code>. A conven√ß√£o
				√© colocar esta tag imediatamente antes do fecho da tag{" "}
				<code>&lt;/body&gt;</code>.
			</p>
			<CodeBlock
				language='html'
				codeString={`<body>
  <!-- Todo o conte√∫do da sua p√°gina vai aqui -->
  <h1>O Meu T√≠tulo</h1>
  <p>Um par√°grafo de exemplo.</p>

  <script src="script.js"></script>
</body>`}
			/>
			<p className='mt-4'>
				<strong>Porque no final do `body`?</strong> Porque o navegador processa
				o HTML de cima para baixo. Se colocarmos o script no{" "}
				<code>&lt;head&gt;</code>, o navegador ir√° parar para descarregar e
				executar o JavaScript antes de ter mostrado o conte√∫do da p√°gina, o que
				pode fazer com que a p√°gina pare√ßa lenta. Ao coloc√°-lo no final,
				garantimos que todo o conte√∫do vis√≠vel √© carregado primeiro.
			</p>
		</section>

		<section>
			<h3 className='text-2xl font-semibold mb-3'>
				5. Sintaxe B√°sica: Coment√°rios e Declara√ß√µes
			</h3>
			<ul className='list-disc list-inside space-y-2 pl-4 mb-4'>
				<li>
					<strong>Declara√ß√µes (Statements):</strong> S√£o as instru√ß√µes que damos
					ao programa. Cada declara√ß√£o geralmente termina com um ponto e v√≠rgula
					(<code>;</code>). Embora no JavaScript moderno seja frequentemente
					opcional, √© uma boa pr√°tica inclu√≠-lo para evitar erros inesperados.
				</li>
				<li>
					<strong>Coment√°rios:</strong> S√£o notas que deixamos no c√≥digo para
					n√≥s mesmos ou para outros programadores. O interpretador de JavaScript
					ignora-os completamente.
				</li>
			</ul>
			<CodeBlock
				language='javascript'
				codeString={`// Este √© um coment√°rio de uma linha.

/*
  Este √© um coment√°rio
  de v√°rias linhas.
  √â √∫til para explica√ß√µes mais longas.
*/

let minhaVariavel = "Ol√°"; // Isto √© uma declara√ß√£o.`}
			/>
		</section>

		<section>
			<h3 className='text-2xl font-semibold mb-3'>
				üìù Tarefa: O Seu Primeiro Script
			</h3>
			<p className='mb-4'>√â hora de p√¥r a teoria em pr√°tica!</p>
			<ol className='list-decimal list-inside space-y-2 pl-4 mb-4'>
				<li>
					Crie um novo ficheiro no seu projeto chamado{" "}
					<code>pratica-js.html</code>.
				</li>
				<li>
					Dentro deste ficheiro, gere a estrutura HTML b√°sica com o Emmet (
					<code>!</code>).
				</li>
				<li>
					Crie um novo ficheiro chamado <code>main.js</code> na mesma pasta.
				</li>
				<li>
					Em <code>main.js</code>, escreva duas linhas de c√≥digo:
					<ul className='list-disc list-inside space-y-1 pl-6 my-2'>
						<li>
							Uma que use <code>console.log()</code> para imprimir uma sauda√ß√£o
							na consola.
						</li>
						<li>
							Outra que use <code>alert()</code> para mostrar uma mensagem
							pop-up no navegador. Por exemplo:{" "}
							<code>alert("O meu primeiro script est√° a funcionar!");</code>.
						</li>
					</ul>
				</li>
				<li>
					Em <code>pratica-js.html</code>, adicione um <code>&lt;h1&gt;</code>{" "}
					com um t√≠tulo e, imediatamente antes de fechar a tag{" "}
					<code>&lt;/body&gt;</code>, ligue o seu ficheiro <code>main.js</code>{" "}
					usando a tag <code>&lt;script&gt;</code>.
				</li>
				<li>
					Abra <code>pratica-js.html</code> com o Live Server. Dever√° ver a
					janela pop-up do <code>alert</code> e, se abrir a consola, ver√° a sua
					mensagem do <code>console.log</code>.
				</li>
			</ol>
		</section>
	</div>
);

export default Lecture19Pt;
